CC=gcc
HARDEN_CFLAGS=-O2 -D_FORTIFY_SOURCE=2 -fPIE -fstack-protector-strong -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now  #-fstack-clash-protection #-pie

CFLAGS = -Wall -Wno-missing-braces --std=gnu99 -g -ggdb -I/usr/X11R6/include/ -I/usr/local/include -D_POSIX_C_SOURCE=199309L $(HARDEN_CFLAGS)

LDFLAGS=-L/usr/X11R6/lib -L/usr/local/lib -lGL -lGLU -lglut -lm -pthread

TDFTOOL_OBJS=tdftool.o tdffont.o sauce.o
OBJS=gfx_opengl.o rawfont.o ansiload.o
ANSIREAD_OBJS=ansiread.o gfx_png.o 
LIBANSICANVAS_OBJS=ansiraster.o ansicanvas.o ansistate.o utf8.o bmf.o 
TESTSAMPLE=../THEDRAWFONTS/BLACKX.TDF
GITHASH=`git log --pretty=format:'%h' -n 1`
GITORIGIN=`git config --get remote.origin.url`
OSVERSION=`uname -srm`
DATE=`date +%Y-%m-%d`
COLUMNS=80
PADDING=`printf '%*s' 110`

all: libansicanvas.a tdftool rawfont ansiread ansitext documentation test-regress

test-regress:
	./test-regress.sh

documentation:
	echo "${PADDING}" >> ansiutils.ans.header
	printf "\n\n" > ansiutils.ans.header
#	./tdftool -f 1 -c THEDRAWFONTS/BOARDX.TDF ANSIUTILS | sed -e "s/^/          /" > ansiutils-header.ans.cp437
#	./tdftool -f 1 THEDRAWFONTS/BOARDX.TDF ANSIUTILS | sed -e "s/^/          /" > ansiutils-header.ans.utf8
#	./tdftool -f 3 -c THEDRAWFONTS/CYBERWX.TDF ANSIUTILS | sed -e "s/^/          /" > ansiutils-header.ans.cp437
#	./tdftool -f 3 THEDRAWFONTS/CYBERWX.TDF ANSIUTILS | sed -e "s/^/          /" > ansiutils-header.ans.utf8
#	./tdftool -f 3 -c THEDRAWFONTS/DSKTDWNX.TDF ANSIUTILS | sed -e "s/^/        /" |sed -e 's/$$/   /g' > ansiutils-header.ans.cp437
#	./tdftool -f 3  THEDRAWFONTS/DSKTDWNX.TDF ANSIUTILS | sed -e "s/^/        /" -e 's/$$/   /g' > ansiutils-header.ans.utf8
	( tdftool -f 3 -c THEDRAWFONTS/DSKTDWNX.TDF ANSIUTILS | head -n 4 ; tdftool -f 5 -c THEDRAWFONTS/DSKTDWNX.TDF ANSIUTILS | tail -n 5 ) | sed -e "s/^/        /" |sed -e 's/$$/   /g' > ansiutils-header.ans.cp437 
	( tdftool -f 3 THEDRAWFONTS/DSKTDWNX.TDF ANSIUTILS | head -n 4 ; tdftool -f 5 THEDRAWFONTS/DSKTDWNX.TDF ANSIUTILS | tail -n 5 ) | sed -e "s/^/        /" |sed -e 's/$$/   /g' > ansiutils-header.ans.utf8
	./ansitext NEWLINE NEWLINE TAB FG_YELLOW UNDERLINE BOLD "ANSIREAD USAGE" NOUNDERLINE ":" NOBOLD NONE NEWLINE NEWLINE >> ansiutils.ans.body
	./ansiread | sed -s "s/^\r/        /" | ./ansiread -z - >> ansiutils.ans.body 2>/dev/null
	./ansitext NEWLINE TAB FG_YELLOW UNDERLINE BOLD "TDFTOOL USAGE" NOUNDERLINE ":" NOBOLD NONE NEWLINE NEWLINE >> ansiutils.ans.body
	./tdftool -v | sed -s "s/^/        /" | ./ansiread -z - >> ansiutils.ans.body 2>/dev/null
	./tdftool | sed -s "s/^\r/        /" | ./ansiread -z - >> ansiutils.ans.body 2>/dev/null
	./ansitext NEWLINE TAB FG_YELLOW UNDERLINE BOLD "RECENT CHANGES" NOUNDERLINE ":" NOBOLD NONE NEWLINE NEWLINE >> ansiutils.ans.body
	./gitxtract.sh | sed -e "s/^/           /" | ./ansiread -z - >> ansiutils.ans.body 2>/dev/null
	./ansitext NEWLINE TAB FG_YELLOW UNDERLINE BOLD "LATEST TEST RESULTS" NOUNDERLINE ":" NOBOLD NONE NEWLINE NEWLINE >> ansiutils.ans.body
	./test-regress.sh | sed -e "s/^/           /" | ./ansiread -z - >> ansiutils.ans.body 2>/dev/null
	./ansitext NEWLINE TAB FG_BLACK BOLD "(${DATE} git #${GITHASH} ${GITORIGIN})" NOBOLD NONE NEWLINE >> ansiutils.ans.body
	./ansitext NEWLINE TAB FG_BLACK BOLD "(${OSVERSION})" NOBOLD NONE NEWLINE >> ansiutils.ans.body
	echo "${PADDING}" >> ansiutils.ans.body
	cat ansiutils.ans.header ansiutils-header.ans.utf8 ansiutils.ans.body > ansiutils.ans.utf8
	cat ansiutils.ans.header ansiutils-header.ans.cp437 ansiutils.ans.body > ansiutils.ans.cp437
	cat ansiutils.ans.utf8 | aha -b  > ansiutils.html
	patch < vga-font.patch
	./ansiread -c -o ansiutils.png ansiutils.ans.cp437
	cp ansiutils.ans.utf8 ansiutils.ans
	rm -f *.body
	rm -f *.header
	rm -f ansiutils-header.ans.cp437
	rm -f ansiutils-header.ans.utf8


sample:
	@./tdftool -c ${TESTSAMPLE} ABC

sampledebug:
	@./tdftool -d -c ${TESTSAMPLE} ABC | more

libansicanvas.a: $(LIBANSICANVAS_OBJS)
	ar cru libansicanvas.a $(LIBANSICANVAS_OBJS)

tdftool: $(TDFTOOL_OBJS) libansicanvas.a
	$(CC) -o tdftool $(TDFTOOL_OBJS) -L. -lansicanvas -lm

ansiread: $(ANSIREAD_OBJS) libansicanvas.a bmf.o gfx_opengl.o
	$(CC) $(CFLAGS) $(LDFLAGS) -o ansiread $(ANSIREAD_OBJS) gfx_opengl.o bmf.o -L. -lansicanvas -lpng -lm -lpthread

rawfont: $(OBJS) libansicanvas.a
	$(CC) $(CFLAGS) $(LDFLAGS) -o rawfont $(OBJS) -L. -lansicanvas -lm -lpthread

ansitext:	ansitext.o
	$(CC) $(CFLAGS) $(LDFLAGS) -o ansitext ansitext.o

clean:
	rm -f tdftool rawfont ansiread *.o *.a *.core

veryclean: clean
	rm -rf tests/pass/*.ans
	rm -rf tests/fail/*.ans
	rm -rf tests/pass/utf8/*.ans

install:
	sudo cp tdftool /usr/bin/tdftool
	sudo cp ansiread /usr/bin/ansiread
	sudo cp *.a /usr/lib/

test: tdftool
	./test.sh
